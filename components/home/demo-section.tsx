import { Pizza } from "lucide-react";
import { MotionDiv, MotionH3 } from "../common/motion-wrapper";
import { SummaryViewer } from "../summaries/summary-viewer";

const DEMO_SUMMARY = `# Frontend Case Study 2024 (1) (1)
Generated Summary
Generated on: 5/20/2025
        
        # Map My Profiles: Angular/React App for Interactive Profile Viewing

. 🗺️  Create a user-friendly web app to view profiles and their locations on a map.

. 💡 Additional key point:  Admin panel for profile data management included.


# Document Details
. 📄 Type: Frontend Case Study
. 🧑‍💻 For: Frontend Developers


# Key Highlights
. ✨ Profile Display: Show profiles with name, photo, and description.
. 📍 Interactive Mapping: Dynamically display addresses on a map.
. 🔎 Summary Integration:  "Summary" button shows profile location on map.


# Why It Matters
. 🌍  This app provides a powerful way to visualize geographic data, improving user engagement and understanding of profile distributions. It's a great portfolio project showcasing advanced frontend skills.


# Main Points
. 🚀 Main insight:  Combines profile data with interactive map visualization.
. 💪 Key strength:  Uses Angular or React for a modern, efficient interface.
. 🏆 Important outcome:  A fully functional, engaging web application.


# Pro Tips
. 💡 First practical recommendation: Use Google Maps or Mapbox for seamless map integration.
. ⚙️ Second valuable insight: Implement robust error handling and loading indicators.
. 📱 Third actionable advice: Ensure responsive design for optimal mobile experience.


# Key Terms to Know
. ⚛️ Angular/React: Popular JavaScript frameworks for building user interfaces.
. 🗺️ Map API: Services like Google Maps or Mapbox providing mapping functionalities.


# Bottom Line
. 👍 Build an engaging profile viewer with interactive map functionality using Angular or React.

        
Original File: Frontend Case Study 2024 (1) (1).pdf
GEnerated by Sommaire
        `;
export default function DemoSection() {
  return (
    <section className="relative">
      <div className="py-12 lg:py-24 max-w-5xl mx-auto px-4 sm:px-6 lg:px-8 lg:pt-12">
        <div
          aria-hidden="true"
          className="pointer-events-none absolute inset-0-z-10 transform-gpu overflow-hidden blur-3xl"
        >
          <div
            className="relative left-[calc(50%+3rem)] aspect-1155/678 w-[36.125rem] -translate-x-1/2 bg-linear-to-br from-emerald-500 via-teal-500 to-cyan-500 opacity-30 sm:left-[calc(50%+36rem)] sm:w-[72.1875rem]"
            style={{
              clipPath:
                "polygon (74.1% 44.1%, 100% 61.6%, 97.5% 26.9%, 85.5% 0. 1%, 80.7% 2%, 72.5% 32.5%, 60.2% 62.4%, 52.4% 68.1%, 47.5% 58.3%, 45.2% 34.5%, 27.5% 76.7%, 0.1% 64.9%, 17. 9% 100%, 27.6% 76.8%, 76.1% 97.7%, 74.1% 44.1%)",
            }}
          />
        </div>
        <div className="flex items-center flex-col text-center space-y-4">
          <div className="inline-flex items-center justify-center p-2 rounded-2xl bg-gray-100/80  backdrop-blur-xs border border-gray-500/20 mb-4">
            {" "}
            <Pizza className="w-6 h-6 text-rose-500" />
          </div>
          <div className="text-center mb-16">
            <MotionH3
              initial={{
                y: 30,
                opacity: 0,
              }}
              whileInView={{ y: 0, opacity: 1 }}
              transition={{ duration: 0.5, delay: 0.2 }}
              className="font-bold textt-3xl max-w-2xl max-auto px-4 sm:px-6"
            >
              Watch how Sommaire tranform{" "}
              <span className="bg-linear-to-r from-rose-500 to-rose-700 bg-clip-text text-transparent">
                this Next.js course PDF
              </span>{" "}
              into an easy-to-read summary!
            </MotionH3>{" "}
          </div>

          <div className="flex justify-center items-center px-2 sm:px-4 lg:px-6">
            {/**Summary Viewer */}
            <MotionDiv
              initial={{ opacity: 0 }}
              whileInView={{ opacity: 1 }}
              transition={{ duration: 0.5 }}
            >
              <SummaryViewer summary={DEMO_SUMMARY} />
            </MotionDiv>
          </div>
        </div>
      </div>
    </section>
  );
}
